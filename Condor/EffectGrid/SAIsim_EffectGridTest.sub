# SAIsim_EffectGrid.sub
# Submit file for running mutation effect heatmap data generation using SAIsim
# Defaults to 100 batches of 10 simulations with passed (sur,rep) mutation
# Use -append "arguments=<argument list>" for use without DAG script


#
# Specify the HTCondor Universe (default vanilla), log file, error file.  
#  Wherever you see $(Cluster), HTCondor will insert the queue number
#  assigned to this set of jobs at the time of submission.

universe = vanilla
log = Log/EffectGrid_$(Cluster).log
error = Log/EffectGrid_$(Cluster)_$(Process).err

#
# Specify executable (binary or script), arguments, 
# files for HTCondor to store standard output (or "screen output").
#  $(Process) will be a integer number for each job, "0" .. number of jobs

executable = SAIsim_EffectGridTest.sh
arguments = "$(sur) $(rep) $(Process)"
output = Log/effectGrid_$(Cluster)_$(Process).out
# requirements = (OpSys == "LINUX") && ( (OpSysMajorVer == 6) || (OpSysMajorVer == 7) )
requirements = (OpSys == "LINUX") && (OpSysMajorVer == 6)

#
# Transfer files to and from the computer where each job runs, 'executable' is implicit

should_transfer_files = YES
when_to_transfer_output = ON_EXIT
# transfer_input_files = SAIsim_EffectGridTest.py, SAIsim.py, http://proxy.chtc.wisc.edu/SQUID/cmcallester/python.tar.gz
transfer_input_files = SAIsim_EffectGridTest.py, SAIsim.py, http://proxy.chtc.wisc.edu/SQUID/chtc/python38.tar.gz, ../packages.tar.gz

#
# Requesting from HTCondor compute resources/job

request_cpus = 1
request_memory = 200MB
request_disk = 300MB
+WantFlocking = true

#
# Tell HTCondor to run 100 instances of our job:

queue 4

