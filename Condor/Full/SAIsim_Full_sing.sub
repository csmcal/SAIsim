# SAIsim_Full.sub
# Submit file for running full SAIsim simulation
# Defaults to 100 batches of 1 simulation(s) with passed mutation and conversion rates
# Use -append "arguments=<argument list>" for use without DAG script
#   i.e. -append "arguments = 0.001 0.0001 10 1 0.01 10000 20000 1 0" replaces the line 
#    'arguments = "$(mut) $(inv) $(enc) $(rec) $(con) $(pop) $(gen) $(wf) $(Process)"' below


#
# Specify the HTCondor Universe (default vanilla), log file, error file.  
#  Wherever you see $(Cluster), HTCondor will insert the queue number
#  assigned to this set of jobs at the time of submission.

universe = vanilla
log = Log/full_$(Cluster).log
error = Log/full_$(Cluster)_$(Process).err

#
# Specify executable (binary or script), arguments, 
# files for HTCondor to store standard output (or "screen output").
#  $(Process) will be a integer number for each job, "0" .. number of jobs

executable = SAIsim_Full.sh
arguments = "$(mut) $(inv) $(enc) $(rec) $(con) $(pop) $(gen) $(wf) $(Process)"
output = Log/full_$(Cluster)_$(Process).out
requirements = (OpSys == "LINUX")

#
# Transfer files to and from the computer where each job runs, 'executable' is implicit

should_transfer_files = YES
when_to_transfer_output = ON_EXIT
transfer_input_files = SAIsim_Full.py, SAIsim.py, http://proxy.chtc.wisc.edu/SQUID/chtc/python39.tar.gz, ../packages.tar.gz

#
# Requesting from HTCondor compute resources/job

request_cpus = 1
request_memory = 1GB
request_disk = 1GB

#
# Tell HTCondor to run 1 instance of our job:

queue 1

